import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
  id 'java'
	id 'org.hibernate.orm' version '6.4.0.Final'
  id 'org.graalvm.buildtools.native' version '0.9.28'
	id 'org.jetbrains.kotlin.jvm' version '2.0.0-Beta1'
	id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0-Beta1'
	id 'org.jetbrains.kotlin.plugin.jpa' version "2.0.0-Beta1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

kotlin {
	jvmToolchain(21)
    compilerOptions {
        apiVersion.set(org.jetbrains.kotlin.gradle.dsl.KotlinVersion.KOTLIN_2_0)
    }
}

repositories {
	mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(KotlinCompile).configureEach {
	compilerOptions {
        freeCompilerArgs.add("-Xjsr305=strict")
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

hibernate {
  enhancement {
    enableAssociationManagement = true
  }
}
